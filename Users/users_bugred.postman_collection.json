{
	"info": {
		"_postman_id": "4f8372b3-67fb-44b4-bece-a467112e7d69",
		"name": "Users_bugred",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23652956"
	},
	"item": [
		{
			"name": "create_user_with_tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"email\",jsonData.email)\r",
							"\r",
							"pm.test(\"Response body has value 'name' \", function () {\r",
							"    pm.expect(jsonData).has.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\",jsonData.name)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"andrechizh{{$randomInt}}@yandex.ru\",\r\n \"name\": \"{{$randomFirstName}}\",\r\n \"tasks\": [{\r\n   \"title\": \"Первая задача 2\",\r\n   \"description\": \"Первая задача 111\"\r\n  },\r\n  {\r\n   \"title\": \"Вторая задача 2\",\r\n   \"description\": \"Вторая задача 111\"\r\n  }\r\n ],\r\n \"companies\": [19, 20],\r\n \"hobby\":\"Стрельба из лука, Настолки\",\r\n  \"adres\":\"адрес 1\",\r\n  \"name1\":\"Тестовый, ясен пень\",\r\n  \"surname1\":\"Иванов\",\r\n  \"fathername1\":\"Петров\",\r\n  \"cat\":\"Маруся\",\r\n  \"dog\":\"Ушастый\",\r\n  \"parrot\":\"Васька\",\r\n  \"cavy\":\"Кто ты?\",\r\n  \"hamster\":\"Хомяк\",\r\n  \"squirrel\":\"Белая горячка к нам пришла\",\r\n  \"phone\":\"333 33 33\",\r\n  \"inn\":\"123456789012\",\r\n  \"gender\":\"m\",\r\n  \"birthday\":\"01.01.1900\",\r\n  \"date_start\":\"11.11.2000\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://users.bugred.ru/tasks/rest/createuserwithtasks",
					"protocol": "http",
					"host": [
						"users",
						"bugred",
						"ru"
					],
					"path": [
						"tasks",
						"rest",
						"createuserwithtasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_created_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json()\r",
							"let name = pm.environment.get(\"name\");\r",
							"let email = pm.environment.get(\"email\");\r",
							"\r",
							"pm.test(\"Status code is correct\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,231,202,203,204,205]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has body\",function(){\r",
							"    pm.expect(pm.response).to.have.body();\r",
							"});\r",
							"\r",
							"pm.test(\"Get name = Created name\",function(){\r",
							"    pm.expect(jsonData.results[0].name).to.eql(name)\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Response have headers\",function(){\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header has value 'application/json'\",function(){\r",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Email is correct\",function(){\r",
							"    pm.expect(jsonData.results[0].email).to.eql(email)\r",
							"});\r",
							"\r",
							"pm.test(\"Response results is an array is not empty\",function(){\r",
							"    pm.expect(jsonData.results).to.be.instanceOf(Array).that.is.not.empty;\r",
							"});\r",
							"\r",
							"\r",
							"results = jsonData.results\r",
							"for(i=0;i<=results.lenght;i++){console.log(results[i])}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://users.bugred.ru/tasks/rest/magicsearch?query={{email}}",
					"protocol": "http",
					"host": [
						"users",
						"bugred",
						"ru"
					],
					"path": [
						"tasks",
						"rest",
						"magicsearch"
					],
					"query": [
						{
							"key": "query",
							"value": "{{email}}"
						}
					]
				}
			},
			"response": []
		}
	]
}